## 模板方法

1.封装不变部分，扩展可变部分

2.提取公共部分代码，便于维护

3.行为由父类控制，子类实现

使用场景：
    多个子类有共有的方法，并且逻辑相同
    重要、复杂的算法，可以把核心的算法设计为模板方法，周边相关细节功能则有各个子类实现
    重构时


